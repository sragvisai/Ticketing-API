{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.publishReplay = void 0;\n\nvar ReplaySubject_1 = require(\"../ReplaySubject\");\n\nvar multicast_1 = require(\"./multicast\");\n\nvar isFunction_1 = require(\"../util/isFunction\");\n\nfunction publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {\n  if (selectorOrScheduler && !isFunction_1.isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n\n  var selector = isFunction_1.isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  return function (source) {\n    return multicast_1.multicast(new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source);\n  };\n}\n\nexports.publishReplay = publishReplay;","map":{"version":3,"sources":["../../../../src/internal/operators/publishReplay.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AA8EA,SAAgB,aAAhB,CACE,UADF,EAEE,UAFF,EAGE,mBAHF,EAIE,iBAJF,EAIuC;AAErC,MAAI,mBAAmB,IAAI,CAAC,YAAA,CAAA,UAAA,CAAW,mBAAX,CAA5B,EAA6D;AAC3D,IAAA,iBAAiB,GAAG,mBAApB;AACD;;AACD,MAAM,QAAQ,GAAG,YAAA,CAAA,UAAA,CAAW,mBAAX,IAAkC,mBAAlC,GAAwD,SAAzE;AAGA,SAAO,UAAC,MAAD,EAAsB;AAAK,WAAA,WAAA,CAAA,SAAA,CAAU,IAAI,eAAA,CAAA,aAAJ,CAAqB,UAArB,EAAiC,UAAjC,EAA6C,iBAA7C,CAAV,EAA2E,QAA3E,EAAA,MAAA,CAAA;AAA6F,GAA/H;AACD;;AAbD,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.publishReplay = void 0;\nvar ReplaySubject_1 = require(\"../ReplaySubject\");\nvar multicast_1 = require(\"./multicast\");\nvar isFunction_1 = require(\"../util/isFunction\");\nfunction publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {\n    if (selectorOrScheduler && !isFunction_1.isFunction(selectorOrScheduler)) {\n        timestampProvider = selectorOrScheduler;\n    }\n    var selector = isFunction_1.isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n    return function (source) { return multicast_1.multicast(new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source); };\n}\nexports.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map"]},"metadata":{},"sourceType":"script"}