{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeInternals = void 0;\n\nvar innerFrom_1 = require(\"../observable/innerFrom\");\n\nvar executeSchedule_1 = require(\"../util/executeSchedule\");\n\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\n\nfunction mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalTeardown) {\n  var buffer = [];\n  var active = 0;\n  var index = 0;\n  var isComplete = false;\n\n  var checkComplete = function () {\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  var outerNext = function (value) {\n    return active < concurrent ? doInnerSub(value) : buffer.push(value);\n  };\n\n  var doInnerSub = function (value) {\n    expand && subscriber.next(value);\n    active++;\n    var innerComplete = false;\n    innerFrom_1.innerFrom(project(value, index++)).subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (innerValue) {\n      onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n\n      if (expand) {\n        outerNext(innerValue);\n      } else {\n        subscriber.next(innerValue);\n      }\n    }, function () {\n      innerComplete = true;\n    }, undefined, function () {\n      if (innerComplete) {\n        try {\n          active--;\n\n          var _loop_1 = function () {\n            var bufferedValue = buffer.shift();\n\n            if (innerSubScheduler) {\n              executeSchedule_1.executeSchedule(subscriber, innerSubScheduler, function () {\n                return doInnerSub(bufferedValue);\n              });\n            } else {\n              doInnerSub(bufferedValue);\n            }\n          };\n\n          while (buffer.length && active < concurrent) {\n            _loop_1();\n          }\n\n          checkComplete();\n        } catch (err) {\n          subscriber.error(err);\n        }\n      }\n    }));\n  };\n\n  source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, outerNext, function () {\n    isComplete = true;\n    checkComplete();\n  }));\n  return function () {\n    additionalTeardown === null || additionalTeardown === void 0 ? void 0 : additionalTeardown();\n  };\n}\n\nexports.mergeInternals = mergeInternals;","map":{"version":3,"sources":["../../../../src/internal/operators/mergeInternals.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAGA,IAAA,iBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAeA,SAAgB,cAAhB,CACE,MADF,EAEE,UAFF,EAGE,OAHF,EAIE,UAJF,EAKE,YALF,EAME,MANF,EAOE,iBAPF,EAQE,kBARF,EAQiC;AAG/B,MAAM,MAAM,GAAQ,EAApB;AAEA,MAAI,MAAM,GAAG,CAAb;AAEA,MAAI,KAAK,GAAG,CAAZ;AAEA,MAAI,UAAU,GAAG,KAAjB;;AAKA,MAAM,aAAa,GAAG,YAAA;AAIpB,QAAI,UAAU,IAAI,CAAC,MAAM,CAAC,MAAtB,IAAgC,CAAC,MAArC,EAA6C;AAC3C,MAAA,UAAU,CAAC,QAAX;AACD;AACF,GAPD;;AAUA,MAAM,SAAS,GAAG,UAAC,KAAD,EAAS;AAAK,WAAC,MAAM,GAAG,UAAT,GAAsB,UAAU,CAAC,KAAD,CAAhC,GAA0C,MAAM,CAAC,IAAP,CAA3C,KAA2C,CAA3C;AAA8D,GAA9F;;AAEA,MAAM,UAAU,GAAG,UAAC,KAAD,EAAS;AAI1B,IAAA,MAAM,IAAI,UAAU,CAAC,IAAX,CAAgB,KAAhB,CAAV;AAIA,IAAA,MAAM;AAKN,QAAI,aAAa,GAAG,KAApB;AAGA,IAAA,WAAA,CAAA,SAAA,CAAU,OAAO,CAAC,KAAD,EAAQ,KAAK,EAAb,CAAjB,EAAmC,SAAnC,CACE,IAAI,oBAAA,CAAA,kBAAJ,CACE,UADF,EAEE,UAAC,UAAD,EAAW;AAGT,MAAA,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAA,YAAY,CAAG,UAAH,CAAZ;;AAEA,UAAI,MAAJ,EAAY;AAGV,QAAA,SAAS,CAAC,UAAD,CAAT;AACD,OAJD,MAIO;AAEL,QAAA,UAAU,CAAC,IAAX,CAAgB,UAAhB;AACD;AACF,KAfH,EAgBE,YAAA;AAGE,MAAA,aAAa,GAAG,IAAhB;AACD,KApBH,EAsBE,SAtBF,EAuBE,YAAA;AAIE,UAAI,aAAJ,EAAmB;AAKjB,YAAI;AAIF,UAAA,MAAM;;;AAMJ,gBAAM,aAAa,GAAG,MAAM,CAAC,KAAP,EAAtB;;AAIA,gBAAI,iBAAJ,EAAuB;AACrB,cAAA,iBAAA,CAAA,eAAA,CAAgB,UAAhB,EAA4B,iBAA5B,EAA+C,YAAA;AAAM,uBAAA,UAAU,CAAV,aAAU,CAAV;AAAyB,eAA9E;AACD,aAFD,MAEO;AACL,cAAA,UAAU,CAAC,aAAD,CAAV;AACD;;;AATH,iBAAO,MAAM,CAAC,MAAP,IAAiB,MAAM,GAAG,UAAjC,EAA2C;;AAU1C;;AAED,UAAA,aAAa;AACd,SAtBD,CAsBE,OAAO,GAAP,EAAY;AACZ,UAAA,UAAU,CAAC,KAAX,CAAiB,GAAjB;AACD;AACF;AACF,KA1DH,CADF;AA8DD,GA9ED;;AAiFA,EAAA,MAAM,CAAC,SAAP,CACE,IAAI,oBAAA,CAAA,kBAAJ,CAAuB,UAAvB,EAAmC,SAAnC,EAA8C,YAAA;AAE5C,IAAA,UAAU,GAAG,IAAb;AACA,IAAA,aAAa;AACd,GAJD,CADF;AAUA,SAAO,YAAA;AACL,IAAA,kBAAkB,KAAA,IAAlB,IAAA,kBAAkB,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAA,kBAAkB,EAAlB;AACD,GAFD;AAGD;;AAhID,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeInternals = void 0;\nvar innerFrom_1 = require(\"../observable/innerFrom\");\nvar executeSchedule_1 = require(\"../util/executeSchedule\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalTeardown) {\n    var buffer = [];\n    var active = 0;\n    var index = 0;\n    var isComplete = false;\n    var checkComplete = function () {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    var outerNext = function (value) { return (active < concurrent ? doInnerSub(value) : buffer.push(value)); };\n    var doInnerSub = function (value) {\n        expand && subscriber.next(value);\n        active++;\n        var innerComplete = false;\n        innerFrom_1.innerFrom(project(value, index++)).subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (innerValue) {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            }\n            else {\n                subscriber.next(innerValue);\n            }\n        }, function () {\n            innerComplete = true;\n        }, undefined, function () {\n            if (innerComplete) {\n                try {\n                    active--;\n                    var _loop_1 = function () {\n                        var bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            executeSchedule_1.executeSchedule(subscriber, innerSubScheduler, function () { return doInnerSub(bufferedValue); });\n                        }\n                        else {\n                            doInnerSub(bufferedValue);\n                        }\n                    };\n                    while (buffer.length && active < concurrent) {\n                        _loop_1();\n                    }\n                    checkComplete();\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, outerNext, function () {\n        isComplete = true;\n        checkComplete();\n    }));\n    return function () {\n        additionalTeardown === null || additionalTeardown === void 0 ? void 0 : additionalTeardown();\n    };\n}\nexports.mergeInternals = mergeInternals;\n//# sourceMappingURL=mergeInternals.js.map"]},"metadata":{},"sourceType":"script"}