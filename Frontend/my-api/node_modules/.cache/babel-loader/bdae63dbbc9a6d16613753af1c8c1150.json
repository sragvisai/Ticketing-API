{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsrag\\\\OneDrive\\\\Desktop\\\\Projects\\\\Zendesk\\\\my-api\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { response } from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst username = 'nsragvi@gmail.com';\nconst password = 'Anasuya@97';\nconst encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64');\nconst authorization = `Basic ${encodedBase64Token}`; // Add a list of allowed origins.\n// If you have more origins you would like to add, you can add them to the array below.\n\nconst lst = [];\n\nconst populateData = data => {\n  lst.push(data); //console.log(lst[0].count);\n};\n\nfunction App() {\n  _s();\n\n  //const count = 0;\n  let [responseData, setResponseData] = React.useState('');\n  let [responseCount, setResponseCount] = React.useState('');\n  let desc;\n  useEffect(() => {\n    axios.get('https://zccsragviletstry.zendesk.com/api/v2/tickets.json', {\n      headers: {\n        Authorization: authorization\n      }\n    }).then(response => {\n      console.log('clear');\n      console.log('response', response.data);\n      populateData(response.data);\n      console.log('count', response.data.count); //lets store the # of tickets being retrieved\n\n      setResponseCount(response.data.count); //lets store the tickets\n\n      setResponseData(response.data.tickets); //const count = response.data.count;\n\n      console.log('hello' + JSON.stringify(responseData));\n      console.log(\"Type\" + typeof response.data.tickets[0].description); //console.log('Response ticket'+resp);\n    });\n  });\n\n  for (let i = 0; i < Number(10); i++) {\n    console.log('hi');\n    desc.push(response.data.tickets[0].description);\n  } //for(let i = 0 ; i <Number( responseCount) ; i++){\n  //console.log('hi');\n  //desc.push(responseData.tickets[i].description)\n  //}\n  // const list = responseData.map((responseData) => \n  // <li>{responseData}</li>\n  // )\n  // ReactDOM.render(\n  //   <p>Hello</p> , \n  //   document.getElementById('root')\n  // // );\n  // const SkipAny: string [] = responseData[0];\n  //plan is to create string arrays to store the descriptions and subject every single object\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"We have a total of #\", responseCount, \" tickets being retrieved\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Rd04J5eOa9N3emQMtg7M5nGc+ag=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/nsrag/OneDrive/Desktop/Projects/Zendesk/my-api/src/App.tsx"],"names":["React","useEffect","axios","response","username","password","encodedBase64Token","Buffer","from","toString","authorization","lst","populateData","data","push","App","responseData","setResponseData","useState","responseCount","setResponseCount","desc","get","headers","Authorization","then","console","log","count","tickets","JSON","stringify","description","i","Number"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,WAAP;AAEA,OAAOC,KAAP,MAAqC,OAArC;AACA,SAAkBC,QAAlB,QAAkC,SAAlC;;AAKA,MAAMC,QAAQ,GAAG,mBAAjB;AACA,MAAMC,QAAQ,GAAG,YAAjB;AACA,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,IAAP,CAAa,GAAEJ,QAAS,IAAGC,QAAS,EAApC,EAAuCI,QAAvC,CAAgD,QAAhD,CAA3B;AACA,MAAMC,aAAa,GAAI,SAAQJ,kBAAmB,EAAlD,C,CAGA;AACA;;AACA,MAAMK,GAAU,GAAG,EAAnB;;AACA,MAAMC,YAAY,GAAIC,IAAD,IAAe;AAACF,EAAAA,GAAG,CAACG,IAAJ,CAASD,IAAT,EAAD,CACpC;AACC,CAFD;;AAIA,SAASE,GAAT,GAAe;AAAA;;AACb;AACA,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,KAAK,CAACkB,QAAN,CAAe,EAAf,CAAtC;AACA,MAAG,CAACC,aAAD,EAAiBC,gBAAjB,IAAqCpB,KAAK,CAACkB,QAAN,CAAe,EAAf,CAAxC;AACA,MAAIG,IAAJ;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACoB,GAAN,CAAU,0DAAV,EAAsE;AACpEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEd;AADR;AAD2D,KAAtE,EAKGe,IALH,CAKStB,QAAD,IAA6B;AAEjCuB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBxB,QAAQ,CAACU,IAAjC;AACAD,MAAAA,YAAY,CAACT,QAAQ,CAACU,IAAV,CAAZ;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBxB,QAAQ,CAACU,IAAT,CAAce,KAAlC,EALiC,CAMjC;;AACAR,MAAAA,gBAAgB,CAACjB,QAAQ,CAACU,IAAT,CAAce,KAAf,CAAhB,CAPiC,CASjC;;AACAX,MAAAA,eAAe,CAACd,QAAQ,CAACU,IAAT,CAAcgB,OAAf,CAAf,CAViC,CAYjC;;AACCH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAQG,IAAI,CAACC,SAAL,CAAef,YAAf,CAApB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAO,OAAOxB,QAAQ,CAACU,IAAT,CAAcgB,OAAd,CAAsB,CAAtB,EAAyBG,WAAnD,EAdgC,CAgBjC;AACD,KAtBH;AAuBD,GAxBQ,CAAT;;AA0BA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAEC,MAAM,CAAE,EAAF,CAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACnCP,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAN,IAAAA,IAAI,CAACP,IAAL,CAAUX,QAAQ,CAACU,IAAT,CAAcgB,OAAd,CAAsB,CAAtB,EAAyBG,WAAnC;AACD,GAnCY,CAoCb;AACE;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA,2CACuBb,aADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9DQJ,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { User } from \"./interfaces\";\nimport axios, { AxiosResponse } from \"axios\";\nimport express, { response } from 'express';\nimport cors from 'cors';\nimport ReactDOM from 'react-dom';\n\n\nconst username = 'nsragvi@gmail.com';\nconst password = 'Anasuya@97';\nconst encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64');\nconst authorization = `Basic ${encodedBase64Token}`;\n\n\n// Add a list of allowed origins.\n// If you have more origins you would like to add, you can add them to the array below.\nconst lst: any[] = [];  \nconst populateData = (data: any) => {lst.push(data);\n//console.log(lst[0].count);\n} \n\nfunction App() {\n  //const count = 0;\n  let [responseData, setResponseData] = React.useState('');\n  let[responseCount , setResponseCount] = React.useState('');\n  let desc : string[];\n\n  useEffect(() => {\n    axios.get('https://zccsragviletstry.zendesk.com/api/v2/tickets.json', {\n      headers: {\n        Authorization: authorization,\n      },\n    })\n      .then((response: AxiosResponse) => {\n        \n        console.log('clear');\n        console.log('response', response.data);\n        populateData(response.data);\n        console.log('count',response.data.count);\n        //lets store the # of tickets being retrieved\n        setResponseCount(response.data.count);\n\n        //lets store the tickets\n        setResponseData(response.data.tickets);\n        \n        //const count = response.data.count;\n         console.log('hello'+JSON.stringify(responseData));\n         console.log(\"Type\"+typeof(response.data.tickets[0].description));\n         \n        //console.log('Response ticket'+resp);\n      })\n  });\n\n  for(let i = 0 ; i <Number( 10) ; i++){\n    console.log('hi');\n    desc.push(response.data.tickets[0].description)\n  }\n  //for(let i = 0 ; i <Number( responseCount) ; i++){\n    //console.log('hi');\n    //desc.push(responseData.tickets[i].description)\n  //}\n  // const list = responseData.map((responseData) => \n  // <li>{responseData}</li>\n  // )\n  // ReactDOM.render(\n  //   <p>Hello</p> , \n  //   document.getElementById('root')\n  // // );\n  // const SkipAny: string [] = responseData[0];\n\n\n  //plan is to create string arrays to store the descriptions and subject every single object\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>\n          We have a total of #{responseCount} tickets being retrieved\n        </h1>\n           \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}