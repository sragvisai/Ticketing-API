{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.windowToggle = void 0;\n\nvar Subject_1 = require(\"../Subject\");\n\nvar Subscription_1 = require(\"../Subscription\");\n\nvar lift_1 = require(\"../util/lift\");\n\nvar innerFrom_1 = require(\"../observable/innerFrom\");\n\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\n\nvar noop_1 = require(\"../util/noop\");\n\nvar arrRemove_1 = require(\"../util/arrRemove\");\n\nfunction windowToggle(openings, closingSelector) {\n  return lift_1.operate(function (source, subscriber) {\n    var windows = [];\n\n    var handleError = function (err) {\n      while (0 < windows.length) {\n        windows.shift().error(err);\n      }\n\n      subscriber.error(err);\n    };\n\n    innerFrom_1.innerFrom(openings).subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (openValue) {\n      var window = new Subject_1.Subject();\n      windows.push(window);\n      var closingSubscription = new Subscription_1.Subscription();\n\n      var closeWindow = function () {\n        arrRemove_1.arrRemove(windows, window);\n        window.complete();\n        closingSubscription.unsubscribe();\n      };\n\n      var closingNotifier;\n\n      try {\n        closingNotifier = innerFrom_1.innerFrom(closingSelector(openValue));\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      subscriber.next(window.asObservable());\n      closingSubscription.add(closingNotifier.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, closeWindow, noop_1.noop, handleError)));\n    }, noop_1.noop));\n    source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n\n      var windowsCopy = windows.slice();\n\n      try {\n        for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n          var window_1 = windowsCopy_1_1.value;\n          window_1.next(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (0 < windows.length) {\n        windows.shift().complete();\n      }\n\n      subscriber.complete();\n    }, handleError, function () {\n      while (0 < windows.length) {\n        windows.shift().unsubscribe();\n      }\n    }));\n  });\n}\n\nexports.windowToggle = windowToggle;","map":{"version":3,"sources":["../../../../src/internal/operators/windowToggle.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.windowToggle = void 0;\nvar Subject_1 = require(\"../Subject\");\nvar Subscription_1 = require(\"../Subscription\");\nvar lift_1 = require(\"../util/lift\");\nvar innerFrom_1 = require(\"../observable/innerFrom\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nvar noop_1 = require(\"../util/noop\");\nvar arrRemove_1 = require(\"../util/arrRemove\");\nfunction windowToggle(openings, closingSelector) {\n    return lift_1.operate(function (source, subscriber) {\n        var windows = [];\n        var handleError = function (err) {\n            while (0 < windows.length) {\n                windows.shift().error(err);\n            }\n            subscriber.error(err);\n        };\n        innerFrom_1.innerFrom(openings).subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (openValue) {\n            var window = new Subject_1.Subject();\n            windows.push(window);\n            var closingSubscription = new Subscription_1.Subscription();\n            var closeWindow = function () {\n                arrRemove_1.arrRemove(windows, window);\n                window.complete();\n                closingSubscription.unsubscribe();\n            };\n            var closingNotifier;\n            try {\n                closingNotifier = innerFrom_1.innerFrom(closingSelector(openValue));\n            }\n            catch (err) {\n                handleError(err);\n                return;\n            }\n            subscriber.next(window.asObservable());\n            closingSubscription.add(closingNotifier.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, closeWindow, noop_1.noop, handleError)));\n        }, noop_1.noop));\n        source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            var windowsCopy = windows.slice();\n            try {\n                for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n                    var window_1 = windowsCopy_1_1.value;\n                    window_1.next(value);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (0 < windows.length) {\n                windows.shift().complete();\n            }\n            subscriber.complete();\n        }, handleError, function () {\n            while (0 < windows.length) {\n                windows.shift().unsubscribe();\n            }\n        }));\n    });\n}\nexports.windowToggle = windowToggle;\n//# sourceMappingURL=windowToggle.js.map"]},"metadata":{},"sourceType":"script"}