{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.take = void 0;\n\nvar empty_1 = require(\"../observable/empty\");\n\nvar lift_1 = require(\"../util/lift\");\n\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\n\nfunction take(count) {\n  return count <= 0 ? function () {\n    return empty_1.EMPTY;\n  } : lift_1.operate(function (source, subscriber) {\n    var seen = 0;\n    source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n      if (++seen <= count) {\n        subscriber.next(value);\n\n        if (count <= seen) {\n          subscriber.complete();\n        }\n      }\n    }));\n  });\n}\n\nexports.take = take;","map":{"version":3,"sources":["../../../../src/internal/operators/take.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AA2CA,SAAgB,IAAhB,CAAwB,KAAxB,EAAqC;AACnC,SAAO,KAAK,IAAI,CAAT,GAEH,YAAA;AAAM,WAAA,OAAA,CAAA,KAAA;AAAK,GAFR,GAGH,MAAA,CAAA,OAAA,CAAQ,UAAC,MAAD,EAAS,UAAT,EAAmB;AACzB,QAAI,IAAI,GAAG,CAAX;AACA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,oBAAA,CAAA,kBAAJ,CAAuB,UAAvB,EAAmC,UAAC,KAAD,EAAM;AAIvC,UAAI,EAAE,IAAF,IAAU,KAAd,EAAqB;AACnB,QAAA,UAAU,CAAC,IAAX,CAAgB,KAAhB;;AAIA,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,UAAA,UAAU,CAAC,QAAX;AACD;AACF;AACF,KAbD,CADF;AAgBD,GAlBD,CAHJ;AAsBD;;AAvBD,OAAA,CAAA,IAAA,GAAA,IAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.take = void 0;\nvar empty_1 = require(\"../observable/empty\");\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction take(count) {\n    return count <= 0\n        ?\n            function () { return empty_1.EMPTY; }\n        : lift_1.operate(function (source, subscriber) {\n            var seen = 0;\n            source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\nexports.take = take;\n//# sourceMappingURL=take.js.map"]},"metadata":{},"sourceType":"script"}