{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsrag\\\\OneDrive\\\\Desktop\\\\Projects\\\\Zendesk\\\\my-api\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport List from './List';\nimport Pagination from './pagination';\nimport IndividualData from './Individualdata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst username = 'nsragvi@gmail.com';\nconst password = 'Anasuya@97';\nconst encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64');\nconst authorization = `Basic ${encodedBase64Token}`; //let individualData = false;\n\nfunction App2() {\n  _s();\n\n  //const count = 0;\n  const [responseData, setResponseData] = React.useState([]);\n  const [loading, setLoading] = useState(false); //as we are looking to start with the first page\n\n  const [currentPage, setCurrentPage] = useState(1); //setting the number of lists per page\n\n  const [postsperPage, setpostsPerPage] = useState(25);\n  const [individualData, setindividualData] = useState(false);\n  const [indvidual_index, setindvidual_index] = useState(-1); //change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const getback = val => {\n    setindividualData(val);\n  }; //sets the indexes for the item to be displayed\n\n\n  const getdata = index => {\n    console.log(\"here\");\n    setindividualData(true);\n    setindvidual_index(index);\n  };\n\n  useEffect(() => {\n    //we can set the loading to true\n    setLoading(true);\n    axios.get('http://localhost:9000/test', {\n      headers: {\n        Authorization: authorization\n      }\n    }).then(response => {\n      console.log(\"Response receieved\" + response.data);\n      return response.data;\n    }).then(odata => {\n      setResponseData(odata);\n    });\n    setLoading(false); //setting the dependency array to empty\n  }, []);\n  const indexoflast = currentPage * postsperPage; //const getback = false;\n\n  const indexoffirst = indexoflast - postsperPage; //lets slice the data by taking the first and last index\n\n  let currentPosts = [];\n\n  if (responseData != null) {\n    currentPosts = responseData.slice(indexoffirst, indexoflast);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary mb-3\",\n      children: \"Ticket Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), !individualData && responseData && /*#__PURE__*/_jsxDEV(List, {\n      requests: currentPosts,\n      loading: loading,\n      getdata: getdata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }, this), !individualData && responseData && /*#__PURE__*/_jsxDEV(Pagination, {\n      postsperPage: postsperPage,\n      totalPosts: responseData.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 41\n    }, this), individualData && responseData && /*#__PURE__*/_jsxDEV(IndividualData, {\n      index: indvidual_index,\n      home: getback,\n      data: responseData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App2, \"KHk6/f2sl6Rd41mvdT7DOGBR9n4=\");\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"sources":["C:/Users/nsrag/OneDrive/Desktop/Projects/Zendesk/my-api/src/App.tsx"],"names":["React","useState","useEffect","axios","List","Pagination","IndividualData","username","password","encodedBase64Token","Buffer","from","toString","authorization","App2","responseData","setResponseData","loading","setLoading","currentPage","setCurrentPage","postsperPage","setpostsPerPage","individualData","setindividualData","indvidual_index","setindvidual_index","paginate","pageNumber","getback","val","getdata","index","console","log","get","headers","Authorization","then","response","data","odata","indexoflast","indexoffirst","currentPosts","slice","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios, { AxiosResponse } from \"axios\";\nimport List from './List';\nimport Pagination from './pagination';\nimport IndividualData from './Individualdata';\n\n\nconst username = 'nsragvi@gmail.com';\nconst password = 'Anasuya@97';\nconst encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64');\nconst authorization = `Basic ${encodedBase64Token}`;\n//let individualData = false;\n\nfunction App2() {\n  //const count = 0;\n  const [responseData, setResponseData] = React.useState([]);\n  const [loading,setLoading] = useState(false);\n  //as we are looking to start with the first page\n  const [ currentPage, setCurrentPage] = useState(1);\n  //setting the number of lists per page\n  const [postsperPage , setpostsPerPage] = useState(25);\n  const [individualData , setindividualData] = useState(false);\n  const [indvidual_index , setindvidual_index] = useState(-1);\n  \n  //change page\n  const paginate = (pageNumber : number) => setCurrentPage(pageNumber);\n  const getback = (val : boolean) =>{\n    setindividualData(val);\n  }\n  //sets the indexes for the item to be displayed\n  const getdata = (index : number) =>{\n    console.log(\"here\");\n    setindividualData(true);\n    setindvidual_index(index);\n  }\n  useEffect(() => {\n    \n    //we can set the loading to true\n    setLoading(true);\n    axios.get('http://localhost:9000/test', {\n      headers: {\n        Authorization: authorization,\n      },\n    })\n  \n      .then((response: AxiosResponse) => {\n        console.log(\"Response receieved\"+response.data);\n        return response.data;\n      })\n      .then(odata =>{\n        setResponseData(odata);\n      });\n            \n     setLoading(false);    \n     \n     //setting the dependency array to empty\n  },[]);\n\n  const indexoflast = currentPage * postsperPage ;\n  //const getback = false;\n  const indexoffirst = indexoflast - postsperPage;\n  //lets slice the data by taking the first and last index\n  let currentPosts : string[] =  [];\n  if(responseData!=null){\n    currentPosts = responseData.slice(indexoffirst,indexoflast);\n  }\n  return (\n    <div className=\"container mt-5\">\n      <h1 className= \"text-primary mb-3\"> \n        Ticket Requests\n      </h1>\n    {!individualData && responseData && <List requests={currentPosts} loading ={loading} getdata ={getdata}></List>} \n    {!individualData && responseData && <Pagination postsperPage={postsperPage} totalPosts={responseData.length} paginate={paginate}></Pagination>}\n    {individualData && responseData && <IndividualData index ={indvidual_index} home = {getback} data ={responseData} ></IndividualData>} \n    </div>\n  );\n}\n\nexport default App2;\n"]},"metadata":{},"sourceType":"module"}