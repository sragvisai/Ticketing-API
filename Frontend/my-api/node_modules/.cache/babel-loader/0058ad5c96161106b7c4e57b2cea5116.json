{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsrag\\\\OneDrive\\\\Desktop\\\\Projects\\\\Zendesk\\\\my-api\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport List from './List';\nimport Pagination from './pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst username = 'nsragvi@gmail.com';\nconst password = 'Anasuya@97';\nconst encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64');\nconst authorization = `Basic ${encodedBase64Token}`; // Add a list of allowed origins.\n// If you have more origins you would like to add, you can add them to the array below.\n\nfunction App2() {\n  _s();\n\n  //const count = 0;\n  const [responseData, setResponseData] = React.useState([]);\n  const [loading, setLoading] = useState(false); //as we are looking to start with the first page\n\n  const [currentPage, setCurrentPage] = useState(1); //setting the number of lists per page\n\n  const [postsperPage, setpostsPerPage] = useState(25);\n  let [responseCount, setResponseCount] = React.useState(''); //change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  useEffect(() => {\n    //we can set the loading to true\n    setLoading(true);\n    console.log(\"Inside the getdata\");\n    axios.get('http://localhost:9000/test', {\n      headers: {\n        Authorization: authorization\n      }\n    }).then(response => {\n      console.log(\"Response receieved\" + response.data);\n      return response.data;\n    }).then(odata => {\n      //trying passing the array here itself\n      setResponseData(odata); //console.log(responseData);\n    });\n    setLoading(false); //setting the dependemcy array to empty\n  }, []);\n  const indexoflast = currentPage * postsperPage;\n  const indexoffirst = indexoflast - postsperPage;\n  let currentPosts = [];\n\n  if (responseData != null) {\n    currentPosts = responseData.slice(indexoffirst, indexoflast);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary mb-3\",\n      children: \"Ticket Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), responseData && /*#__PURE__*/_jsxDEV(List, {\n      requests: currentPosts,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }, this), responseData && /*#__PURE__*/_jsxDEV(Pagination, {\n      postsperPage: postsperPage,\n      totalPosts: responseData.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App2, \"ctXUn3UADmAcFGYKQF9LCgFcq4E=\");\n\n_c = App2;\nexport default App2;\n\nvar _c;\n\n$RefreshReg$(_c, \"App2\");","map":{"version":3,"sources":["C:/Users/nsrag/OneDrive/Desktop/Projects/Zendesk/my-api/src/App.tsx"],"names":["React","useState","useEffect","axios","List","Pagination","username","password","encodedBase64Token","Buffer","from","toString","authorization","App2","responseData","setResponseData","loading","setLoading","currentPage","setCurrentPage","postsperPage","setpostsPerPage","responseCount","setResponseCount","paginate","pageNumber","console","log","get","headers","Authorization","then","response","data","odata","indexoflast","indexoffirst","currentPosts","slice","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { User } from \"./interfaces\";\nimport axios, { AxiosResponse } from \"axios\";\nimport express, { response } from 'express';\nimport cors from 'cors';\nimport ReactDOM from 'react-dom';\nimport List from './List';\nimport Pagination from './pagination';\n\n\nconst username = 'nsragvi@gmail.com';\nconst password = 'Anasuya@97';\nconst encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64');\nconst authorization = `Basic ${encodedBase64Token}`;\n\n\n// Add a list of allowed origins.\n// If you have more origins you would like to add, you can add them to the array below.\n\nfunction App2(this: any) {\n  //const count = 0;\n  const [responseData, setResponseData] = React.useState([]);\n  const [loading,setLoading] = useState(false);\n  //as we are looking to start with the first page\n  const [ currentPage, setCurrentPage] = useState(1);\n  //setting the number of lists per page\n  const [postsperPage , setpostsPerPage] = useState(25); \n  let [responseCount, setResponseCount] = React.useState('');\n  \n  //change page\n  const paginate = (pageNumber : number) => setCurrentPage(pageNumber);\n\n  useEffect(() => {\n    \n    //we can set the loading to true\n    setLoading(true);\n    console.log(\"Inside the getdata\");\n    axios.get('http://localhost:9000/test', {\n      headers: {\n        Authorization: authorization,\n      },\n    })\n  \n      .then((response: AxiosResponse) => {\n        console.log(\"Response receieved\"+response.data);\n        return response.data;\n      })\n      .then(odata =>{\n        //trying passing the array here itself\n        setResponseData(odata);\n        //console.log(responseData);\n      });\n            \n     setLoading(false);\n     \n     \n     //setting the dependemcy array to empty\n  },[]);\n\n  const indexoflast = currentPage * postsperPage ;\n\n  const indexoffirst = indexoflast - postsperPage;\n  let currentPosts : string[] =  [];\n  if(responseData!=null){\n    currentPosts = responseData.slice(indexoffirst,indexoflast);\n  }\n  return (\n    <div className=\"container mt-5\">\n      <h1 className= \"text-primary mb-3\"> \n        Ticket Requests\n      </h1>\n    {responseData && <List requests={currentPosts} loading ={loading}></List>} \n    {responseData && <Pagination postsperPage={postsperPage} totalPosts={responseData.length} paginate={paginate}></Pagination>} \n    </div>\n  );\n}\n\nexport default App2;\n"]},"metadata":{},"sourceType":"module"}