{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.count = void 0;\n\nvar reduce_1 = require(\"./reduce\");\n\nfunction count(predicate) {\n  return reduce_1.reduce(function (total, value, i) {\n    return !predicate || predicate(value, i) ? total + 1 : total;\n  }, 0);\n}\n\nexports.count = count;","map":{"version":3,"sources":["../../../../src/internal/operators/count.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAyDA,SAAgB,KAAhB,CAAyB,SAAzB,EAAyE;AACvE,SAAO,QAAA,CAAA,MAAA,CAAO,UAAC,KAAD,EAAQ,KAAR,EAAe,CAAf,EAAgB;AAAK,WAAC,CAAC,SAAD,IAAc,SAAS,CAAC,KAAD,EAAQ,CAAR,CAAvB,GAAoC,KAAK,GAAG,CAA5C,GAAD,KAAA;AAAuD,GAAnF,EAAqF,CAArF,CAAP;AACD;;AAFD,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.count = void 0;\nvar reduce_1 = require(\"./reduce\");\nfunction count(predicate) {\n    return reduce_1.reduce(function (total, value, i) { return (!predicate || predicate(value, i) ? total + 1 : total); }, 0);\n}\nexports.count = count;\n//# sourceMappingURL=count.js.map"]},"metadata":{},"sourceType":"script"}