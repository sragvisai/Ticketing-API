{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.delayWhen = void 0;\n\nvar concat_1 = require(\"../observable/concat\");\n\nvar take_1 = require(\"./take\");\n\nvar ignoreElements_1 = require(\"./ignoreElements\");\n\nvar mapTo_1 = require(\"./mapTo\");\n\nvar mergeMap_1 = require(\"./mergeMap\");\n\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n  if (subscriptionDelay) {\n    return function (source) {\n      return concat_1.concat(subscriptionDelay.pipe(take_1.take(1), ignoreElements_1.ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n    };\n  }\n\n  return mergeMap_1.mergeMap(function (value, index) {\n    return delayDurationSelector(value, index).pipe(take_1.take(1), mapTo_1.mapTo(value));\n  });\n}\n\nexports.delayWhen = delayWhen;","map":{"version":3,"sources":["../../../../src/internal/operators/delayWhen.ts"],"names":[],"mappings":";;;;;;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AAmEA,SAAgB,SAAhB,CACE,qBADF,EAEE,iBAFF,EAEqC;AAEnC,MAAI,iBAAJ,EAAuB;AAErB,WAAO,UAAC,MAAD,EAAsB;AAC3B,aAAA,QAAA,CAAA,MAAA,CAAO,iBAAiB,CAAC,IAAlB,CAAuB,MAAA,CAAA,IAAA,CAAK,CAAL,CAAvB,EAAgC,gBAAA,CAAA,cAAA,EAAhC,CAAP,EAA0D,MAAM,CAAC,IAAP,CAAY,SAAS,CAAC,qBAAD,CAArB,CAA1D,CAAA;AAAwG,KAD1G;AAED;;AAED,SAAO,UAAA,CAAA,QAAA,CAAS,UAAC,KAAD,EAAQ,KAAR,EAAa;AAAK,WAAA,qBAAqB,CAAC,KAAD,EAAQ,KAAR,CAArB,CAAoC,IAApC,CAAyC,MAAA,CAAA,IAAA,CAAK,CAAL,CAAzC,EAAkD,OAAA,CAAA,KAAA,CAAlD,KAAkD,CAAlD,CAAA;AAA+D,GAA1F,CAAP;AACD;;AAXD,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.delayWhen = void 0;\nvar concat_1 = require(\"../observable/concat\");\nvar take_1 = require(\"./take\");\nvar ignoreElements_1 = require(\"./ignoreElements\");\nvar mapTo_1 = require(\"./mapTo\");\nvar mergeMap_1 = require(\"./mergeMap\");\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return concat_1.concat(subscriptionDelay.pipe(take_1.take(1), ignoreElements_1.ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n        };\n    }\n    return mergeMap_1.mergeMap(function (value, index) { return delayDurationSelector(value, index).pipe(take_1.take(1), mapTo_1.mapTo(value)); });\n}\nexports.delayWhen = delayWhen;\n//# sourceMappingURL=delayWhen.js.map"]},"metadata":{},"sourceType":"script"}