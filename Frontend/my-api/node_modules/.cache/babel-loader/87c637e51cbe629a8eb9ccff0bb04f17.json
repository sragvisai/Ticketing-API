{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.windowTime = void 0;\n\nvar Subject_1 = require(\"../Subject\");\n\nvar async_1 = require(\"../scheduler/async\");\n\nvar Subscription_1 = require(\"../Subscription\");\n\nvar lift_1 = require(\"../util/lift\");\n\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\n\nvar arrRemove_1 = require(\"../util/arrRemove\");\n\nvar args_1 = require(\"../util/args\");\n\nvar executeSchedule_1 = require(\"../util/executeSchedule\");\n\nfunction windowTime(windowTimeSpan) {\n  var _a, _b;\n\n  var otherArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    otherArgs[_i - 1] = arguments[_i];\n  }\n\n  var scheduler = (_a = args_1.popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : async_1.asyncScheduler;\n  var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxWindowSize = otherArgs[1] || Infinity;\n  return lift_1.operate(function (source, subscriber) {\n    var windowRecords = [];\n    var restartOnClose = false;\n\n    var closeWindow = function (record) {\n      var window = record.window,\n          subs = record.subs;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove_1.arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    var startWindow = function () {\n      if (windowRecords) {\n        var subs = new Subscription_1.Subscription();\n        subscriber.add(subs);\n        var window_1 = new Subject_1.Subject();\n        var record_1 = {\n          window: window_1,\n          subs: subs,\n          seen: 0\n        };\n        windowRecords.push(record_1);\n        subscriber.next(window_1.asObservable());\n        executeSchedule_1.executeSchedule(subs, scheduler, function () {\n          return closeWindow(record_1);\n        }, windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      executeSchedule_1.executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    var loop = function (cb) {\n      return windowRecords.slice().forEach(cb);\n    };\n\n    var terminate = function (cb) {\n      loop(function (_a) {\n        var window = _a.window;\n        return cb(window);\n      });\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n      loop(function (record) {\n        record.window.next(value);\n        maxWindowSize <= ++record.seen && closeWindow(record);\n      });\n    }, function () {\n      return terminate(function (consumer) {\n        return consumer.complete();\n      });\n    }, function (err) {\n      return terminate(function (consumer) {\n        return consumer.error(err);\n      });\n    }));\n    return function () {\n      windowRecords = null;\n    };\n  });\n}\n\nexports.windowTime = windowTime;","map":{"version":3,"sources":["../../../../src/internal/operators/windowTime.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.windowTime = void 0;\nvar Subject_1 = require(\"../Subject\");\nvar async_1 = require(\"../scheduler/async\");\nvar Subscription_1 = require(\"../Subscription\");\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nvar arrRemove_1 = require(\"../util/arrRemove\");\nvar args_1 = require(\"../util/args\");\nvar executeSchedule_1 = require(\"../util/executeSchedule\");\nfunction windowTime(windowTimeSpan) {\n    var _a, _b;\n    var otherArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n    }\n    var scheduler = (_a = args_1.popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : async_1.asyncScheduler;\n    var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    var maxWindowSize = otherArgs[1] || Infinity;\n    return lift_1.operate(function (source, subscriber) {\n        var windowRecords = [];\n        var restartOnClose = false;\n        var closeWindow = function (record) {\n            var window = record.window, subs = record.subs;\n            window.complete();\n            subs.unsubscribe();\n            arrRemove_1.arrRemove(windowRecords, record);\n            restartOnClose && startWindow();\n        };\n        var startWindow = function () {\n            if (windowRecords) {\n                var subs = new Subscription_1.Subscription();\n                subscriber.add(subs);\n                var window_1 = new Subject_1.Subject();\n                var record_1 = {\n                    window: window_1,\n                    subs: subs,\n                    seen: 0,\n                };\n                windowRecords.push(record_1);\n                subscriber.next(window_1.asObservable());\n                executeSchedule_1.executeSchedule(subs, scheduler, function () { return closeWindow(record_1); }, windowTimeSpan);\n            }\n        };\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            executeSchedule_1.executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n        }\n        else {\n            restartOnClose = true;\n        }\n        startWindow();\n        var loop = function (cb) { return windowRecords.slice().forEach(cb); };\n        var terminate = function (cb) {\n            loop(function (_a) {\n                var window = _a.window;\n                return cb(window);\n            });\n            cb(subscriber);\n            subscriber.unsubscribe();\n        };\n        source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n            loop(function (record) {\n                record.window.next(value);\n                maxWindowSize <= ++record.seen && closeWindow(record);\n            });\n        }, function () { return terminate(function (consumer) { return consumer.complete(); }); }, function (err) { return terminate(function (consumer) { return consumer.error(err); }); }));\n        return function () {\n            windowRecords = null;\n        };\n    });\n}\nexports.windowTime = windowTime;\n//# sourceMappingURL=windowTime.js.map"]},"metadata":{},"sourceType":"script"}