{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFind = exports.find = void 0;\n\nvar lift_1 = require(\"../util/lift\");\n\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\n\nfunction find(predicate, thisArg) {\n  return lift_1.operate(createFind(predicate, thisArg, 'value'));\n}\n\nexports.find = find;\n\nfunction createFind(predicate, thisArg, emit) {\n  var findIndex = emit === 'index';\n  return function (source, subscriber) {\n    var index = 0;\n    source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n      var i = index++;\n\n      if (predicate.call(thisArg, value, i, source)) {\n        subscriber.next(findIndex ? i : value);\n        subscriber.complete();\n      }\n    }, function () {\n      subscriber.next(findIndex ? -1 : undefined);\n      subscriber.complete();\n    }));\n  };\n}\n\nexports.createFind = createFind;","map":{"version":3,"sources":["../../../../src/internal/operators/find.ts"],"names":[],"mappings":";;;;;;;AAGA,IAAA,MAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AA2DA,SAAgB,IAAhB,CACE,SADF,EAEE,OAFF,EAEe;AAEb,SAAO,MAAA,CAAA,OAAA,CAAQ,UAAU,CAAC,SAAD,EAAY,OAAZ,EAAqB,OAArB,CAAlB,CAAP;AACD;;AALD,OAAA,CAAA,IAAA,GAAA,IAAA;;AAOA,SAAgB,UAAhB,CACE,SADF,EAEE,OAFF,EAGE,IAHF,EAGyB;AAEvB,MAAM,SAAS,GAAG,IAAI,KAAK,OAA3B;AACA,SAAO,UAAC,MAAD,EAAwB,UAAxB,EAAmD;AACxD,QAAI,KAAK,GAAG,CAAZ;AACA,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,oBAAA,CAAA,kBAAJ,CACE,UADF,EAEE,UAAC,KAAD,EAAM;AACJ,UAAM,CAAC,GAAG,KAAK,EAAf;;AACA,UAAI,SAAS,CAAC,IAAV,CAAe,OAAf,EAAwB,KAAxB,EAA+B,CAA/B,EAAkC,MAAlC,CAAJ,EAA+C;AAC7C,QAAA,UAAU,CAAC,IAAX,CAAgB,SAAS,GAAG,CAAH,GAAO,KAAhC;AACA,QAAA,UAAU,CAAC,QAAX;AACD;AACF,KARH,EASE,YAAA;AACE,MAAA,UAAU,CAAC,IAAX,CAAgB,SAAS,GAAG,CAAC,CAAJ,GAAQ,SAAjC;AACA,MAAA,UAAU,CAAC,QAAX;AACD,KAZH,CADF;AAgBD,GAlBD;AAmBD;;AAzBD,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createFind = exports.find = void 0;\nvar lift_1 = require(\"../util/lift\");\nvar OperatorSubscriber_1 = require(\"./OperatorSubscriber\");\nfunction find(predicate, thisArg) {\n    return lift_1.operate(createFind(predicate, thisArg, 'value'));\n}\nexports.find = find;\nfunction createFind(predicate, thisArg, emit) {\n    var findIndex = emit === 'index';\n    return function (source, subscriber) {\n        var index = 0;\n        source.subscribe(new OperatorSubscriber_1.OperatorSubscriber(subscriber, function (value) {\n            var i = index++;\n            if (predicate.call(thisArg, value, i, source)) {\n                subscriber.next(findIndex ? i : value);\n                subscriber.complete();\n            }\n        }, function () {\n            subscriber.next(findIndex ? -1 : undefined);\n            subscriber.complete();\n        }));\n    };\n}\nexports.createFind = createFind;\n//# sourceMappingURL=find.js.map"]},"metadata":{},"sourceType":"script"}