{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeScan = void 0;\n\nvar lift_1 = require(\"../util/lift\");\n\nvar mergeInternals_1 = require(\"./mergeInternals\");\n\nfunction mergeScan(accumulator, seed, concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Infinity;\n  }\n\n  return lift_1.operate(function (source, subscriber) {\n    var state = seed;\n    return mergeInternals_1.mergeInternals(source, subscriber, function (value, index) {\n      return accumulator(state, value, index);\n    }, concurrent, function (value) {\n      state = value;\n    }, false, undefined, function () {\n      return state = null;\n    });\n  });\n}\n\nexports.mergeScan = mergeScan;","map":{"version":3,"sources":["../../../../src/internal/operators/mergeScan.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAkEA,SAAgB,SAAhB,CACE,WADF,EAEE,IAFF,EAGE,UAHF,EAGuB;AAArB,MAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,UAAA,GAAA,QAAA;AAAqB;;AAErB,SAAO,MAAA,CAAA,OAAA,CAAQ,UAAC,MAAD,EAAS,UAAT,EAAmB;AAEhC,QAAI,KAAK,GAAG,IAAZ;AAEA,WAAO,gBAAA,CAAA,cAAA,CACL,MADK,EAEL,UAFK,EAGL,UAAC,KAAD,EAAQ,KAAR,EAAa;AAAK,aAAA,WAAW,CAAC,KAAD,EAAQ,KAAR,EAAX,KAAW,CAAX;AAAgC,KAH7C,EAIL,UAJK,EAKL,UAAC,KAAD,EAAM;AACJ,MAAA,KAAK,GAAG,KAAR;AACD,KAPI,EAQL,KARK,EASL,SATK,EAUL,YAAA;AAAM,aAAC,KAAK,GAAN,IAAA;AAAe,KAVhB,CAAP;AAYD,GAhBM,CAAP;AAiBD;;AAtBD,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeScan = void 0;\nvar lift_1 = require(\"../util/lift\");\nvar mergeInternals_1 = require(\"./mergeInternals\");\nfunction mergeScan(accumulator, seed, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    return lift_1.operate(function (source, subscriber) {\n        var state = seed;\n        return mergeInternals_1.mergeInternals(source, subscriber, function (value, index) { return accumulator(state, value, index); }, concurrent, function (value) {\n            state = value;\n        }, false, undefined, function () { return (state = null); });\n    });\n}\nexports.mergeScan = mergeScan;\n//# sourceMappingURL=mergeScan.js.map"]},"metadata":{},"sourceType":"script"}