{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsrag\\\\OneDrive\\\\Desktop\\\\Projects\\\\Zendesk\\\\my-api\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst username = 'nsragvi@gmail.com';\nconst password = 'Anasuya@97';\nconst encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64');\nconst authorization = `Basic ${encodedBase64Token}`; // Add a list of allowed origins.\n// If you have more origins you would like to add, you can add them to the array below.\n\nconst lst = [];\nlet desc = [];\n\nconst populateData = data => {\n  lst.push(data); //console.log(lst[0].count);\n};\n\nconst adddes = data => {\n  console.log(\"Inside the addess function and this the data that we got:- \" + data);\n  let len = 0;\n\n  if (data != null) {\n    len = data.length;\n  }\n\n  console.log(\"The length of the retrieved array is\" + len);\n\n  if (len > 25) {\n    console.log(\"We do have a lot of stuff here dudee...\");\n  }\n};\n\nlet count = 0;\n\nfunction App() {\n  _s();\n\n  //const count = 0;\n  const [responseData, setResponseData] = React.useState(null);\n  const [loading, setLoading] = useState(false); //as we are looking to start with the first page\n\n  const [currentPage, setCurrentPage] = useState(1); //setting the number of lists per page\n\n  const [postsperPage, setpostsPerPage] = useState(25);\n  let [responseCount, setResponseCount] = React.useState('');\n  useEffect(() => {\n    //we can set the loading to true\n    setLoading(true);\n    console.log(\"Inside the getdata\");\n    axios.get('https://zccsragviletstry.zendesk.com/api/v2/tickets.json', {\n      headers: {\n        Authorization: authorization\n      }\n    }).then(response => {\n      return response.data;\n    }).then(odata => {\n      //trying passing the array here itself\n      setResponseData(odata.tickets); //console.log(responseData);\n    });\n    setLoading(false); //setting the dependemcy array to null\n  }, []);\n  adddes(responseData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"One\",\n      children: responseData && /*#__PURE__*/_jsxDEV(List, {\n        requests: responseData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CUyr5+L0aXHqvWdIJOU6JtAgGhI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/nsrag/OneDrive/Desktop/Projects/Zendesk/my-api/src/App.tsx"],"names":["React","useState","useEffect","axios","List","username","password","encodedBase64Token","Buffer","from","toString","authorization","lst","desc","populateData","data","push","adddes","console","log","len","length","count","App","responseData","setResponseData","loading","setLoading","currentPage","setCurrentPage","postsperPage","setpostsPerPage","responseCount","setResponseCount","get","headers","Authorization","then","response","odata","tickets"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,WAAP;AAEA,OAAOC,KAAP,MAAqC,OAArC;AAIA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,QAAQ,GAAG,mBAAjB;AACA,MAAMC,QAAQ,GAAG,YAAjB;AACA,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,IAAP,CAAa,GAAEJ,QAAS,IAAGC,QAAS,EAApC,EAAuCI,QAAvC,CAAgD,QAAhD,CAA3B;AACA,MAAMC,aAAa,GAAI,SAAQJ,kBAAmB,EAAlD,C,CAGA;AACA;;AACA,MAAMK,GAAU,GAAG,EAAnB;AACA,IAAIC,IAAc,GAAG,EAArB;;AACA,MAAMC,YAAY,GAAIC,IAAD,IAAe;AAClCH,EAAAA,GAAG,CAACI,IAAJ,CAASD,IAAT,EADkC,CAElC;AACD,CAHD;;AAIA,MAAME,MAAM,GAAIF,IAAD,IAAe;AAE5BG,EAAAA,OAAO,CAACC,GAAR,CAAY,gEAA+DJ,IAA3E;AACE,MAAIK,GAAG,GAAG,CAAV;;AACF,MAAGL,IAAI,IAAE,IAAT,EAAc;AACbK,IAAAA,GAAG,GAAGL,IAAI,CAACM,MAAX;AACA;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAY,yCAAuCC,GAAnD;;AAEA,MAAGA,GAAG,GAAG,EAAT,EAEA;AACEF,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACD;AAKF,CAlBD;;AAoBA,IAAIG,KAAK,GAAG,CAAZ;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCzB,KAAK,CAACC,QAAN,CAAe,IAAf,CAAxC;AACA,QAAM,CAACyB,OAAD,EAASC,UAAT,IAAuB1B,QAAQ,CAAC,KAAD,CAArC,CAHa,CAIb;;AACA,QAAM,CAAE2B,WAAF,EAAeC,cAAf,IAAiC5B,QAAQ,CAAC,CAAD,CAA/C,CALa,CAMb;;AACA,QAAM,CAAC6B,YAAD,EAAgBC,eAAhB,IAAmC9B,QAAQ,CAAC,EAAD,CAAjD;AACA,MAAI,CAAC+B,aAAD,EAAgBC,gBAAhB,IAAoCjC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AAEd;AACAyB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAhB,IAAAA,KAAK,CAAC+B,GAAN,CAAU,0DAAV,EAAsE;AACpEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEzB;AADR;AAD2D,KAAtE,EAMG0B,IANH,CAMSC,QAAD,IAA6B;AACjC,aAAOA,QAAQ,CAACvB,IAAhB;AACD,KARH,EASGsB,IATH,CASQE,KAAK,IAAG;AACZ;AACAd,MAAAA,eAAe,CAACc,KAAK,CAACC,OAAP,CAAf,CAFY,CAGZ;AACD,KAbH;AAcCb,IAAAA,UAAU,CAAC,KAAD,CAAV,CAnBa,CAqBb;AACF,GAtBQ,EAsBP,EAtBO,CAAT;AAwBAV,EAAAA,MAAM,CAACO,YAAD,CAAN;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACG;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA,gBACFA,YAAY,iBAAI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADd;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA5CQD,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { User } from \"./interfaces\";\nimport axios, { AxiosResponse } from \"axios\";\nimport express, { response } from 'express';\nimport cors from 'cors';\nimport ReactDOM from 'react-dom';\nimport List from './List';\n\n\nconst username = 'nsragvi@gmail.com';\nconst password = 'Anasuya@97';\nconst encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64');\nconst authorization = `Basic ${encodedBase64Token}`;\n\n\n// Add a list of allowed origins.\n// If you have more origins you would like to add, you can add them to the array below.\nconst lst: any[] = [];\nlet desc: string[] = [];\nconst populateData = (data: any) => {\n  lst.push(data);\n  //console.log(lst[0].count);\n}\nconst adddes = (data: any) => {\n \n  console.log(\"Inside the addess function and this the data that we got:- \" +data);\n    let len = 0;\n  if(data!=null){\n   len = data.length;\n  }\n  console.log(\"The length of the retrieved array is\"+len);\n\n  if(len > 25)\n\n  {\n    console.log(\"We do have a lot of stuff here dudee...\");\n  }\n\n\n\n\n}\n\nlet count = 0;\nfunction App() {\n  //const count = 0;\n  const [responseData, setResponseData] = React.useState(null);\n  const [loading,setLoading] = useState(false);\n  //as we are looking to start with the first page\n  const [ currentPage, setCurrentPage] = useState(1);\n  //setting the number of lists per page\n  const [postsperPage , setpostsPerPage] = useState(25); \n  let [responseCount, setResponseCount] = React.useState('');\n\n\n  useEffect(() => {\n    \n    //we can set the loading to true\n    setLoading(true);\n    console.log(\"Inside the getdata\");\n    axios.get('https://zccsragviletstry.zendesk.com/api/v2/tickets.json', {\n      headers: {\n        Authorization: authorization,\n      },\n    })\n  \n      .then((response: AxiosResponse) => {\n        return response.data;\n      })\n      .then(odata =>{\n        //trying passing the array here itself\n        setResponseData(odata.tickets);\n        //console.log(responseData);\n      });\n     setLoading(false);\n     \n     //setting the dependemcy array to null\n  },[]);\n\n  adddes(responseData);\n\n  return (\n    <div className=\"App\">\n       <div className =\"One\">\n    {responseData && <List requests={responseData}></List>}\n    </div>    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}