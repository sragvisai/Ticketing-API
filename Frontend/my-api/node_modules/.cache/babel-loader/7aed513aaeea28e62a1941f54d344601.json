{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scheduleAsyncIterable = void 0;\n\nvar Observable_1 = require(\"../Observable\");\n\nvar executeSchedule_1 = require(\"../util/executeSchedule\");\n\nfunction scheduleAsyncIterable(input, scheduler) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n\n  return new Observable_1.Observable(function (subscriber) {\n    executeSchedule_1.executeSchedule(subscriber, scheduler, function () {\n      var iterator = input[Symbol.asyncIterator]();\n      executeSchedule_1.executeSchedule(subscriber, scheduler, function () {\n        iterator.next().then(function (result) {\n          if (result.done) {\n            subscriber.complete();\n          } else {\n            subscriber.next(result.value);\n          }\n        });\n      }, 0, true);\n    });\n  });\n}\n\nexports.scheduleAsyncIterable = scheduleAsyncIterable;","map":{"version":3,"sources":["../../../../src/internal/scheduled/scheduleAsyncIterable.ts"],"names":[],"mappings":";;;;;;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,SAAgB,qBAAhB,CAAyC,KAAzC,EAAkE,SAAlE,EAA0F;AACxF,MAAI,CAAC,KAAL,EAAY;AACV,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACD;;AACD,SAAO,IAAI,YAAA,CAAA,UAAJ,CAAkB,UAAC,UAAD,EAAW;AAClC,IAAA,iBAAA,CAAA,eAAA,CAAgB,UAAhB,EAA4B,SAA5B,EAAuC,YAAA;AACrC,UAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,aAAR,CAAL,EAAjB;AACA,MAAA,iBAAA,CAAA,eAAA,CACE,UADF,EAEE,SAFF,EAGE,YAAA;AACE,QAAA,QAAQ,CAAC,IAAT,GAAgB,IAAhB,CAAqB,UAAC,MAAD,EAAO;AAC1B,cAAI,MAAM,CAAC,IAAX,EAAiB;AAGf,YAAA,UAAU,CAAC,QAAX;AACD,WAJD,MAIO;AACL,YAAA,UAAU,CAAC,IAAX,CAAgB,MAAM,CAAC,KAAvB;AACD;AACF,SARD;AASD,OAbH,EAcE,CAdF,EAeE,IAfF;AAiBD,KAnBD;AAoBD,GArBM,CAAP;AAsBD;;AA1BD,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scheduleAsyncIterable = void 0;\nvar Observable_1 = require(\"../Observable\");\nvar executeSchedule_1 = require(\"../util/executeSchedule\");\nfunction scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable_1.Observable(function (subscriber) {\n        executeSchedule_1.executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule_1.executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\nexports.scheduleAsyncIterable = scheduleAsyncIterable;\n//# sourceMappingURL=scheduleAsyncIterable.js.map"]},"metadata":{},"sourceType":"script"}